#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const inquirer = require('inquirer')
const ora = require('ora')
const download = require('download-git-repo')
const gitclone = require('git-clone')
const tplObj = require(`${__dirname}/../template`)

program
  .usage('<template-name> [project-name] [options]')
  // 配置拉取代码方式
  .option('-t,--type [value]', 'Set how to pull code from remote. \'value\' can choose \'download-git-repo\' to type \'download-git-repo\' or \'d\', or choose \'git-clone\' to type \'git-clone\' or \'g\'.', 'git-clone')

program.parse(process.argv)
// 当没有输入参数的时候给个提示
if (program.args.length < 1) return program.help()

// 好比 vue init webpack project-name 的命令一样，第一个参数是 webpack，第二个参数是 project-name
let templateName = program.args[0]
let projectName = program.args[1]
let url = tplObj[templateName]
// [20210427][upd]
let downType = program.type

// 小小校验一下参数
if (!url) {
  console.log(chalk.red('\n Template does not exit! \n '))
  return
}
if (!projectName) {
  console.log(chalk.red('\n Project should not be empty! \n '))
  return
}

console.log(chalk.white('\n Start generating... \n'))

// 出现加载图标
const spinner = ora("Downloading...");
spinner.start();
// [20210427][upd] 根据远程代码拉取方式进行代码拉取
if (downType == "download-git-repo" || downType == "d") {
  // 执行下载方法并传入参数
  download(
    url,
    projectName,
    err => {
      afterPullOperate(spinner, err)
    }
  )
}
if (downType == "git-clone" || downType == "g") {
  url = "https://github.com/" + url + '.git'
  gitclone(url, `${process.cwd()}/${projectName}`, null, (err) => {
    afterPullOperate(spinner, err)
  })
}

// [20210427][crt] 拉取代码后续操作
function afterPullOperate(spinner, error) {
  if (error) {
    spinner.fail();
    console.log(chalk.red(`Generation failed. ${error}`))
    return
  }
  // 结束加载图标
  spinner.succeed();
  console.log(chalk.green('\n Generation completed!'))
  console.log('\n To get started')
  console.log(`\n cd ${projectName} \n`)

  console.log(chalk.green(`visit the file 'package.json' to start project. \n`))

}